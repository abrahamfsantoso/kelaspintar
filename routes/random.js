// Faker
const faker = require('faker');
const userModel = require('../models/User');
const studentModel = require('../models/Student');
const reportModel = require('../models/Report');
const subjectModel = require('../models/Subject');
const chapterModel = require('../models/Chapter');

const router = require('express').Router();

// Set up our simple routing system to take us to the "home.ejs" file
// or the home webpage whenever the application is launched
// router.get('/', (req, res) => {
//   fakerModel.find((err, data) => {
//     if (err) {
//       console.log(err);
//     } else if (data) {
//       res.render('home', { data: data });
//     } else {
//       res.render('home', { data: {} });
//     }
//   });
// });

// Return each data generated to the variables below and save all of them
// This will  be done ten times due to the for loop
// You can add the number of data to be generated by changing the value
router.post('/add/user', async (req, res) => {
  const fakee = new userModel({
    userName: faker.internet.userName(),
    firstName: faker.name.firstName(),
    middleName: faker.name.middleName(),
    lastName: faker.name.lastName(),
    email: faker.internet.email(),
    password: faker.internet.password(),
    role: faker.random.arrayElement(['student', 'teacher']),
    grade: faker.datatype.number({ min: 1, max: 12 }),
  });

  if (fakee.role === 'student') {
    const newStudent = new studentModel({
      name: fakee.firstName,
      grade: fakee.grade,
    });

    newStudent ? newStudent.save() : '';
  }

  try {
    const newFakee = await fakee.save();
    return res.status(201).json(newFakee);
  } catch (error) {
    return res.status(500).json(error.message);
  }
});

router.post('/add/student', async (req, res) => {
  const fakee = new studentModel({
    name: faker.name.firstName(),
    grade: faker.datatype.number({ min: 1, max: 12 }),
  });
  try {
    const newFakee = await fakee.save();
    return res.status(201).json(newFakee);
  } catch (error) {
    return res.status(500).json(error.message);
  }
});

router.post('/add/subject', async (req, res) => {
  const fakee = new subjectModel({
    subject_name: faker.random.arrayElement([
      'Math',
      'English',
      'Indonesian',
      'Science',
    ]),
    grade: faker.datatype.number({ min: 1, max: 12 }),
  });

  const fakeeCheck = await subjectModel.findOne({
    subject_name: fakee.subject_name,
    grade: fakee.grade,
  });

  if (fakeeCheck) {
    return res.status(403).json('Subject already exists');
  }
  try {
    const newFakee = await fakee.save();
    return res.status(201).json(newFakee);
  } catch (error) {
    return res.status(500).json(error.message);
  }
});

router.post('/add/chapter', async (req, res) => {
  const randomSubject = await subjectModel.aggregate([
    { $sample: { size: 1 } },
  ]);

  const fakee = new chapterModel({
    chapter_name: faker.random.word(),
    grade: randomSubject[0].grade,
    subject_id: randomSubject[0]._id,
  });

  const fakeeCheck = await chapterModel.findOne({
    chapter_name: fakee.chapter_name,
    grade: fakee.grade,
    subject_id: fakee.subject_id,
  });

  if (fakeeCheck) {
    return res.status(403).json('Chapter already exists');
  }
  try {
    const newFakee = await fakee.save();
    return res.status(201).json(newFakee);
  } catch (error) {
    return res.status(500).json(error.message);
  }
});

router.post('/add/report', async (req, res) => {
  const randomStudent = await studentModel.aggregate([
    { $sample: { size: 1 } },
  ]);

  console.log(randomStudent);
  // const subjectStudent = await subjectModel.find({
  //   grade: randomStudent[0].grade,
  // });

  //   console.log(subjectStudent);

  const chapterStudent = await chapterModel.find({
    grade: randomStudent[0].grade,
  });

  console.log(chapterStudent);

  // const fakeeCheck = await reportModel.findOne({
  //   student_id: fakee.student_id,
  //   grade: fakee.grade,
  //   subject_id: chapter.subject_id,
  //   chapter_id: chapter._id,
  // });

  // if (fakeeCheck) {
  //   return res.status(403).json('Report already exists');
  // }

  try {
    for (const chapter of chapterStudent) {
      const fakee = new reportModel({
        student_id: randomStudent[0]._id,
        grade: chapter.grade,
        subject_id: chapter.subject_id,
        chapter_id: chapter._id,
        score: faker.datatype.number({ min: 5, max: 10 }),
      });
      console.log(fakee)
      const fakeeCheck = await reportModel.findOne({
        student_id: fakee.student_id,
        grade: fakee.grade,
        subject_id: fakee.subject_id,
        chapter_id: fakee.chapter_id,
      });
      console.log(fakee)
      if (fakeeCheck) {
        return res.status(403).json('Report already exists');
      } else {
        await fakee.save();
        return res.status(201).json('Report added');
      }
    }
  } catch (error) {
    return res.status(500).json(error.message);
  }
});

module.exports = router;
